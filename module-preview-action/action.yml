name: "Facets Module Preview & Security Scan"
description: "Runs Terraform formatting checks, validation, Checkov security scanning, and Facets module preview."
author: "Your Name"

inputs:
  control_plane_url:
    description: "Facets Control Plane URL"
    required: false  # Not required in dry-run mode
  username:
    description: "Facets Username"
    required: false  # Not required in dry-run mode
  token:
    description: "Facets API Token"
    required: false  # Not required in dry-run mode
  dry-run:
    description: "Run the action in dry-run mode (skip preview and secrets)"
    required: false
    default: "false"
  all-modules:
    description: "Run the action for all modules in repo"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0


    - name: Install Dependencies (Facets, Terraform, Checkov)
      shell: bash
      run: |
        sudo apt-get install -y python3 python3-pip curl unzip jq git
        curl -fsSL https://releases.hashicorp.com/terraform/1.5.0/terraform_1.5.0_linux_amd64.zip -o terraform.zip
        unzip terraform.zip && mv terraform /usr/local/bin/ && rm terraform.zip
        pip install checkov

    - name: Identify All Facets Modules (All Modules)
      if: inputs.all-modules == 'true'
      id: dry_run_dirs
      shell: bash
      run: |
        echo "üöÄ Step: Identify All Facets Modules (All Modules)"

        REPO_ROOT="."
        FACETS_DIRS=""

        echo "üîç Scanning repository for Facets modules..."
        for dir in $(find "$REPO_ROOT" -type f -name "facets.yaml" -exec dirname {} \; | sort -u); do
          echo "   ‚û°Ô∏è Found Facets module: $dir"
          FACETS_DIRS="$FACETS_DIRS $dir"
        done

        if [[ -z "$FACETS_DIRS" ]]; then
          echo "‚úÖ No Facets modules found. Skipping."
          exit 0
        fi

        echo "üì¶ Final list of Facets modules: $FACETS_DIRS"
        echo "dirs=$FACETS_DIRS" >> "$GITHUB_ENV"
        echo "‚úÖ Dry run mode complete."
    

    - name: Identify Changed Directories (Changed Modules)
      if: inputs.all-modules != 'true'
      id: changed_dirs
      shell: bash
      run: |
        echo "üöÄ Step: Identify Changed Directories (Changed Modules)"

        echo "üîÑ Fetching git changes..."
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "üìå Event: Pull Request. Fetching base ref '${{ github.event.pull_request.base.ref }}'..."
          BASE_REF="${{ github.event.pull_request.base.sha }}"
        else
          echo "üìå Event: Push. Using before/after  commits..."
          BASE_REF="${{ github.event.before }}"
        fi

        echo "üîç Finding changed directories... git diff ($BASE_REF/$HEAD_REF)"
        CHANGED_DIRS=$(git diff --name-only "$BASE_REF...HEAD" | xargs -I {} dirname {} | sort -u)
        echo "üìù Changed directories detected: $CHANGED_DIRS"

        FACETS_DIRS=""
        for dir in $CHANGED_DIRS; do
          if [ -f "$dir/facets.yaml" ]; then
            echo "   ‚û°Ô∏è Facets module detected: $dir"
            FACETS_DIRS="$FACETS_DIRS $dir"
          fi
        done

        if [[ -z "$FACETS_DIRS" ]]; then
          echo "‚úÖ No modified Facets modules found. Skipping."
          exit 0
        fi

        echo "üì¶ Final list of changed Facets modules: $FACETS_DIRS"
        echo "dirs=$FACETS_DIRS" >> "$GITHUB_ENV"
        echo "‚úÖ Step complete."
    
    

    - name: Run Terraform Formatting Check (Fail on Incorrect Formatting)
      if: env.dirs != ''
      shell: bash
      run: |
        for dir in $dirs; do
          echo "üîç Checking Terraform formatting in $dir"
          terraform fmt -recursive -check "$dir" || (echo "‚ùå Terraform formatting issues found in $dir. Run 'terraform fmt' locally." && exit 1)
        done

    - name: Run Terraform Validate
      if: env.dirs != ''
      shell: bash
      run: |
        for dir in $dirs; do
          echo "‚úÖ Validating Terraform in $dir"
          terraform  -chdir="$dir" init -backend=false 
          terraform -chdir="$dir" validate 
        done

    - name: Run Checkov Security Scan
      if: env.dirs != ''
      shell: bash
      run: |
        for dir in $dirs; do
          echo "üîç Running Checkov security scan in $dir"
          checkov -d "$dir" --quiet --hard-fail-on HIGH,CRITICAL --framework terraform,kubernetes --output cli
        done

    - name: Preview Facets Module
      if: env.dirs != '' && inputs.dry-run != 'true'
      shell: bash
      run: |
        for dir in $dirs; do
          if [[ -f "$dir/facets.yaml" ]]; then
            echo "üîç Registering Facets module for preview in $dir..."
            curl -s https://facets-cloud.github.io/facets-schemas/scripts/module_register.sh | bash -s -- \
              -c "${{ inputs.control_plane_url }}" \
              -u "${{ inputs.username }}" \
              -t "${{ inputs.token }}" \
              -p "$dir"
          fi
        done
