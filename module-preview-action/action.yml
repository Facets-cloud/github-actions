name: "Facets Module Preview & Security Scan"
description: "Runs Terraform formatting checks, validation, Checkov security scanning, and Facets module preview."
author: "Your Name"

inputs:
  control_plane_url:
    description: "Facets Control Plane URL"
    required: false  # Not required in dry-run mode
  username:
    description: "Facets Username"
    required: false  # Not required in dry-run mode
  token:
    description: "Facets API Token"
    required: false  # Not required in dry-run mode
  dry-run:
    description: "Run the action in dry-run mode (skip preview and secrets)"
    required: false
    default: "false"
  all-modules:
    description: "Run the action for all modules in repo"
    required: false
    default: "false"
  skip-terraform-validation:
    description: "Skip the Terraform Validate step"
    required: false
    default: "false"
  auto-create-intent:
    description: "Automatically create intent if not exists"
    required: false
    default: "false"
  publish:
    description: "Publish the module"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    # This step is needed since setup-python fails if it doesnt detect either of these two files
    - if: hashFiles('**/requirements.txt', '**/pyproject.toml') == ''
      shell: bash
      run: |
          touch ./requirements.txt

    - name: Install Dependencies (Facets, Terraform, Checkov)
      shell: bash
      run: |
        sudo apt-get install -y python3 python3-pip curl unzip jq git
        curl -fsSL https://releases.hashicorp.com/terraform/1.5.7/terraform_1.5.7_linux_amd64.zip -o terraform.zip
        unzip terraform.zip && mv terraform /usr/local/bin/ && rm terraform.zip
        pip install git+https://github.com/Facets-cloud/module-development-cli.git

    - name: Identify All Facets Modules (All Modules)
      if: inputs.all-modules == 'true'
      id: dry_run_dirs
      shell: bash
      run: |
        echo "🚀 Step: Identify All Facets Modules (All Modules)"

        REPO_ROOT="."
        FACETS_DIRS=""

        echo "🔍 Scanning repository for Facets modules..."
        for dir in $(find "$REPO_ROOT" -type f -name "facets.yaml" -exec dirname {} \; | sort -u); do
          echo "   ➡️ Found Facets module: $dir"
          FACETS_DIRS="$FACETS_DIRS $dir"
        done

        if [[ -z "$FACETS_DIRS" ]]; then
          echo "✅ No Facets modules found. Skipping."
          exit 0
        fi

        echo "📦 Final list of Facets modules: $FACETS_DIRS"
        echo "dirs=$FACETS_DIRS" >> "$GITHUB_ENV"
        echo "✅ Dry run mode complete."


    - name: Identify Changed Directories (Changed Modules)
      if: inputs.all-modules != 'true'
      id: changed_dirs
      shell: bash
      run: |
        echo "🚀 Step: Identify Changed Directories (Changed Modules)"

        echo "🔄 Fetching git changes..."
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "📌 Event: Pull Request. Fetching base ref '${{ github.event.pull_request.base.ref }}'..."
          BASE_REF="${{ github.event.pull_request.base.sha }}"
        else
          echo "📌 Event: Push. Using before/after  commits..."
          BASE_REF="${{ github.event.before }}"
        fi

        echo "🔍 Finding changed directories... git diff ($BASE_REF/$HEAD_REF)"
        CHANGED_DIRS=$(git diff --name-only "$BASE_REF...HEAD" | xargs -I {} dirname {} | sort -u)
        echo "📝 Changed directories detected: $CHANGED_DIRS"

        FACETS_DIRS=""
        for dir in $CHANGED_DIRS; do
          if [ -f "$dir/facets.yaml" ]; then
            echo "   ➡️ Facets module detected: $dir"
            FACETS_DIRS="$FACETS_DIRS $dir"
          fi
        done

        if [[ -z "$FACETS_DIRS" ]]; then
          echo "✅ No modified Facets modules found. Skipping."
          exit 0
        fi

        echo "📦 Final list of changed Facets modules: $FACETS_DIRS"
        echo "dirs=$FACETS_DIRS" >> "$GITHUB_ENV"
        echo "✅ Step complete."

    - name: Get Git Info
      if: env.dirs != '' && inputs.dry-run != 'true'
      id: git_info
      shell: bash
      run: |
        # Get commit ID
        COMMIT_ID=$(git rev-parse HEAD)
        echo "commit_id=$COMMIT_ID" >> $GITHUB_ENV
        
        # Construct Git URL
        REPO_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
        GIT_URL="${REPO_URL}/commit/${COMMIT_ID}"
        echo "git_url=$GIT_URL" >> $GITHUB_ENV
        
        echo "🔍 Git Commit ID: $COMMIT_ID"
        echo "🔍 Git URL: $GIT_URL"

    - name: FTF Login
      if: env.dirs != ''
      shell: bash
      run: |
        echo "✅ Login to CP using ftf"
        ftf login -c "${{ inputs.control_plane_url }}" -u "${{ inputs.username }}" -t "${{ inputs.token }}" -p default


    - name: Register Facets Module
      if: env.dirs != '' && inputs.dry-run != 'true'
      shell: bash
      run: |
        for dir in $dirs; do
          if [[ -f "$dir/facets.yaml" ]]; then
            echo "🔍 Registering Facets module for $([ \"${{ inputs.publish }}\" = \"true\" ] && echo publishing || echo preview) in $dir..."
            ftf preview-module $dir -a "${{ inputs.auto-create-intent }}" -r "${{ env.commit_id }}" -g "${{ env.git_url }}" --publish "${{ inputs.publish }}"  --profile default --skip-terraform-validation "${{ inputs.skip-terraform-validation }}"
          fi
        done
